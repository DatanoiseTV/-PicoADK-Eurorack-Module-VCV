
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef ENGINE_H
#define ENGINE_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "engine.tables.h"

typedef struct _tuple___real_real_real_real__ {
   float field_0;
   float field_1;
   float field_2;
   float field_3;
} _tuple___real_real_real_real__;

typedef struct Processor__ctx_type_0 {
   float process_ret_3;
   float process_ret_2;
   float process_ret_1;
   float process_ret_0;
   float param4;
   float param3;
   float param2;
   float param1;
} Processor__ctx_type_0;

typedef Processor__ctx_type_0 Processor_process_type;

void Processor__ctx_type_0_init(Processor__ctx_type_0 &_output_);

static_inline void Processor_process_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

void Processor_process(Processor__ctx_type_0 &_ctx, float in1, float in2, float in3, float in4);

typedef Processor__ctx_type_0 Processor_process_ret_0_type;

static_inline void Processor_process_ret_0_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline float Processor_process_ret_0(Processor__ctx_type_0 &_ctx){
   return _ctx.process_ret_0;
};

typedef Processor__ctx_type_0 Processor_process_ret_1_type;

static_inline void Processor_process_ret_1_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline float Processor_process_ret_1(Processor__ctx_type_0 &_ctx){
   return _ctx.process_ret_1;
};

typedef Processor__ctx_type_0 Processor_process_ret_2_type;

static_inline void Processor_process_ret_2_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline float Processor_process_ret_2(Processor__ctx_type_0 &_ctx){
   return _ctx.process_ret_2;
};

typedef Processor__ctx_type_0 Processor_process_ret_3_type;

static_inline void Processor_process_ret_3_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline float Processor_process_ret_3(Processor__ctx_type_0 &_ctx){
   return _ctx.process_ret_3;
};

typedef Processor__ctx_type_0 Processor_setParam1_type;

static_inline void Processor_setParam1_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_setParam1(Processor__ctx_type_0 &_ctx, float knob, float mod, float input){
   _ctx.param1 = float_clip((knob + (input * mod)),0.0f,1.f);
};

typedef Processor__ctx_type_0 Processor_setParam2_type;

static_inline void Processor_setParam2_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_setParam2(Processor__ctx_type_0 &_ctx, float knob, float mod, float input){
   _ctx.param2 = float_clip((knob + (input * mod)),0.0f,1.f);
};

typedef Processor__ctx_type_0 Processor_setParam3_type;

static_inline void Processor_setParam3_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_setParam3(Processor__ctx_type_0 &_ctx, float knob, float mod, float input){
   _ctx.param3 = float_clip((knob + (input * mod)),0.0f,1.f);
};

typedef Processor__ctx_type_0 Processor_setParam4_type;

static_inline void Processor_setParam4_init(Processor__ctx_type_0 &_output_){
   Processor__ctx_type_0_init(_output_);
   return ;
}

static_inline void Processor_setParam4(Processor__ctx_type_0 &_ctx, float knob, float mod, float input){
   _ctx.param4 = float_clip((knob + (input * mod)),0.0f,1.f);
};



#endif // ENGINE_H
